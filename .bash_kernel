function clean-kernel() {
   (
    set -ex
    cd $HOME/linux-${KERNEL_VERSION}
    make ARCH=${KARCH} CROSS_COMPILE=${CROSS_COMPILE} clean
   )
}

function reallyclean-kernel() {
   (
    set -ex
    cd $HOME/linux-${KERNEL_VERSION}
    git clean -fdx
   )
}

function select-kernel()
{
   cd "${HOME}/linux-${KERNEL_VERSION}"
   if [ "${KARCH}" == "arm" ]; then
      export KIMAGE=zImage
      export CROSS_COMPILE=arm-linux-gnueabihf-
      export KERNEL=${KERNEL:-kernel7l}
   else
      export CROSS_COMPILE=aarch64-linux-gnu-
      export KIMAGE=Image
      if [ "${KERNEL_VERSION}" = 2712 ] || [ "${DEFCONFIG}" = 2712 ]; then
         export KERNEL=kernel_2712
      else
         export KERNEL=${KERNEL:-kernel8}
      fi
   fi
}

function compile-kernel()
{
   make ARCH=${KARCH} CROSS_COMPILE=${CROSS_COMPILE} -j${JOBS} ${KIMAGE} modules dtbs
}

function savedefconfig()
{
   (
    set -e
    set -x
    select-kernel
    make ARCH=${KARCH} CROSS_COMPILE=${CROSS_COMPILE} savedefconfig
   )
}

function build-kernel()
{
   (
    set -e
    set -x
    select-kernel
    defconfig=${KERNEL_PLATFORM}${DEFCONFIG}_defconfig
    make ARCH=${KARCH} CROSS_COMPILE=${CROSS_COMPILE} ${defconfig}
    compile-kernel
   )
}

function menuconfig()
{
   (
    set -e
    set -x
    select-kernel
    defconfig=${KERNEL_PLATFORM}${DEFCONFIG}_defconfig
    make ARCH=${KARCH} CROSS_COMPILE=${CROSS_COMPILE} ${defconfig}
    make ARCH=${KARCH} CROSS_COMPILE=${CROSS_COMPILE} menuconfig
   )
}

function mfg-2709-menuconfig()
{
   (
    set -e
    select-kernel
    make ARCH=${KARCH} CROSS_COMPILE=${CROSS_COMPILE} bcm2709_mfg_defconfig
    make ARCH=${KARCH} CROSS_COMPILE=${CROSS_COMPILE} menuconfig
   )
}

function package-kernel()
{
   (
    set -x
    set -e

    deploy="deploy-${DEFCONFIG}"
    cd $HOME/linux-${KERNEL_VERSION}
    rm -rf "${deploy}"
    mkdir -p "${deploy}/overlays"
    make ARCH=${KARCH} CROSS_COMPILE=${CROSS_COMPILE} INSTALL_DTBS_PATH="${deploy}" dtbs_install
    make ARCH=${KARCH} CROSS_COMPILE=${CROSS_COMPILE} INSTALL_MOD_PATH="${deploy}" modules_install
    if [ -d "${deploy}/broadcom" ]; then
      cp -f "${deploy}/broadcom/"*.dtb $HOME/linux-${KERNEL_VERSION}/${deploy}
    fi
    find "${deploy}" -type l -exec rm -f \{} \;
    cp arch/${KARCH}/boot/dts/overlays/README "${deploy}/overlays"
    cp arch/${KARCH}/boot/${KIMAGE} "${deploy}/${KERNEL}.img"
   )
}

function deploy-kernel()
{
   (
    set -e
    pi_addr="${PI_ADDR}"
    bless-pi
    cd $HOME/linux-${KERNEL_VERSION}
    if [ -n "${pi_addr}" ]; then
        if false; then
           rm -rf backup
           mkdir -p backup/lib/modules
           rsync pi@${pi_addr}:/boot/firmware/* backup
           rsync pi@${pi_addr}:/lib/modules/* backup/lib/modules
        fi

        deploy="deploy-${DEFCONFIG}"
        ssh pi@${pi_addr} rm -rf deploy
        rsync -zav ${deploy}/* pi@${pi_addr}:/home/pi/deploy
        ssh pi@${pi_addr} "sudo rm -rf /boot/firmware/*.dtb /boot/overlays/*"
        ssh pi@${pi_addr} "sudo cp -f /home/pi/deploy/*.dtb /boot/firmware"
        ssh pi@${pi_addr} "sudo cp -rf /home/pi/deploy/overlays/* /boot/firmware/overlays"
        ssh pi@${pi_addr} "sudo cp -f /home/pi/deploy/*.img /boot/firmware"
        ssh pi@${pi_addr} "sudo cp -rf /home/pi/deploy/lib/modules/* /lib/modules"
        ssh pi@${pi_addr} "sync"

    else
        echo "Usage: deploy-kernel IP_ADDR"
    fi
   )
}

function install-kernel()
{
   (
    set -e
    pi_addr="${PI_ADDR}"
    cd $HOME/linux-${KERNEL_VERSION}
    deploy="deploy-${DEFCONFIG}"
    sudo cp -f ${deploy}/*.dtb /boot/firmware
    sudo cp -rf ${deploy}/overlays/* /boot/firmware/overlays
    sudo cp -f ${deploy}/*.img /boot/firmware
    sudo cp -rf ${deploy}/lib/modules/* /lib/modules
   )
}

function deploy-device-tree()
{
   (
    set -e
    pi_addr="${PI_ADDR}"
    bless-pi
    cd $HOME/linux-${KERNEL_VERSION}
    if [ -n "${pi_addr}" ]; then
        deploy="deploy-${DEFCONFIG}"
        ssh pi@${pi_addr} rm -rf deploy
        rsync -zav arch/arm64/boot/dts/broadcom/*.dtb pi@${pi_addr}:/home/pi/deploy
        ssh pi@${pi_addr} "sudo cp -f /home/pi/deploy/*.dtb /boot"
        ssh pi@${pi_addr} "sync"

    else
        echo "Usage: deploy-kernel IP_ADDR"
    fi
   )
}

function bless-pi() {
   (
    set -e
    set -x
    pi_addr="${PI_ADDR}"
    ssh pi@${PI_ADDR} "mkdir -p /home/pi/.ssh ; chmod go-rwx /home/pi/.ssh"
    scp -r ${HOME}/.ssh/auth/* pi@${PI_ADDR}:/home/pi/.ssh
    cd $HOME
   )
}

function select-rt() {
   export KERNEL_PLATFORM=bcm
   export KERNEL_VERSION=rt
   export KERNEL=kernel8_rt
   export DEFCONFIG=2711_rt
   export KARCH=arm64
   export ARCH=arm64
   select-kernel
}

function select-kernel8() {
   export KERNEL_PLATFORM=bcm
   export KERNEL_VERSION=kernel8
   export DEFCONFIG=2711
   export KARCH=arm64
   export ARCH=arm64
   select-kernel
}

function select-2712() {
   export KERNEL_PLATFORM=bcm
   export KERNEL_VERSION=2712
   export DEFCONFIG=2712
   export KARCH=arm64
   export ARCH=arm64
   select-kernel
}

function select-2709()
{
   export KERNEL_PLATFORM=bcm
   export KERNEL_VERSION=2709
   export KERNEL=kernel7
   export DEFCONFIG=2709
   export KARCH=arm
   export ARCH=arm
   select-kernel
}

function select-2711()
{
   export KERNEL_PLATFORM=bcm
   export KERNEL_VERSION=2711
   export KERNEL=kernel7l
   export DEFCONFIG=2711
   export KARCH=arm
   export ARCH=arm
   select-kernel
}

function select-rpi() {
   export KERNEL_VERSION=rpi
   export KERNEL_PLATFORM=bcm
   export KERNEL=kernel6
   export VARIANT=raspberrypi_medium
   export DEFCONFIG=rpi
   export KARCH=arm
   export ARCH=arm
   select-kernel
}

function select-mfg() {
   export KERNEL_PLATFORM=bcm
   export WORKTREE=mfg
   export KERNEL_VERSION=ci
   export DEFCONFIG=2711_mfg
   select-kernel
}

function select-ci-mfg-32() {
   export KERNEL_PLATFORM=bcm
   export WORKTREE=ci
   export KERNEL_VERSION=ci
   export DEFCONFIG=2711
   export KARCH=arm
   export ARCH=arm
   select-kernel
}

function addconfig() {
   config_text="${1}"
   old_defconfig="${DEFCONFIG}"
   old_KARCH="${KARCH}"
   select-kernel
   export KERNEL_PLATFORM=bcm
   for KARCH in arm64 arm; do
      if [ "${KARCH}" = arm64 ]; then
         DEFCONFIGS="2711 2711_rt 2712"
      else
         DEFCONFIGS="rpi 2709 2711"
      fi
      for DEFCONFIG in $DEFCONFIGS; do
         defconfig_file=arch/$KARCH/configs/bcm${DEFCONFIG}_defconfig
         echo Updating ${KARCH} ${defconfig_file}
         export DECONFIG=${DEFCONFIG}
         echo "${config_text}" >> "${defconfig_file}"
         git diff "${defconfig_file}"

         defconfig=${KERNEL_PLATFORM}${DEFCONFIG}_defconfig
         make ARCH=${KARCH} CROSS_COMPILE=${CROSS_COMPILE} ${KERNEL_PLATFORM}${DEFCONFIG}_defconfig

         make ARCH=${KARCH} CROSS_COMPILE=${CROSS_COMPILE} savedefconfig

         cp -f defconfig "${defconfig_file}"
      done
   done
   export DEFCONFIG="${old_defconfig}"
   export KARCH="${old_KARCH}"

}
