#!/bin/sh

script_dir=$(cd "$(dirname "$0")" && pwd)

cp -f "${script_dir}/.bash_ssh_agent" $HOME
cp -f "${script_dir}/.bash_kernel" $HOME

cat <<EOF > "${HOME}/.bash_user_extras"
set -o vi
export EDITOR=vi
export PATH=\${PATH}:\${HOME}/bin:\${HOME}/rpi-util:/usr/local/bin
alias s='git status'
alias vl='sudo \${HOME}/rpi-util/videocore-log'
alias ee='sudo EDITOR=vim rpi-eeprom-config --edit'
alias bcmstat='\${HOME}/bcmstat/bcmstat.sh -o+v3d o+hevc -o+isp -o+isp -o+disp -t -e'
alias S='. \$HOME/.bashrc'
alias gg='git grep -n --color'
alias hg='history | grep -i --color'

function update-recovery()
{
   mkdir -p /home/pi/sd
   sudo mount /dev/mmcblk0p1 /home/pi/sd
   sudo cp -f /boot/recovery.bin /home/pi/sd/recovery.bin
   sudo umount /home/pi/sd
   sudo sync
}

function pico-cmake-init() {
   ln -sf "\${PICO_SDK_PATH}/external/pico_sdk_import.cmake" .
   if [ -f CMakeLists.txt ]; then
      if ! grep -q cmake_minimum_required CMakeLists.txt; then
         tmp=\$(mktemp)
         echo "cmake_minimum_required(VERSION 3.13)" >> \${tmp}
         echo "include(pico_sdk_import.cmake)" >> \${tmp}
         echo "project(pico_app)" >> \${tmp}
         echo "pico_sdk_init()" >> \${tmp}
         cat CMakeLists.txt | grep -v set_url >> \${tmp}
         mv \${tmp} CMakeLists.txt
      fi
      rm -rf build
      mkdir build
      cd build
      if [ "\$1" = "-d" ]; then
          echo cmake -DCMAKE_BUILD_TYPE=Debug "\${@}" ..
          cmake -DCMAKE_BUILD_TYPE=Debug "\${@}" ..
      else
         echo cmake "\${@}" ..
         cmake "\${@}" ..
      fi
   else
      echo "No CMakeLists.txt"
   fi
}

function pico-debug() {
   sudo openocd -f interface/cmsis-dap.cfg -f target/rp2040.cfg -c "adapter speed 5000"
}

function pico-upload()
{
   sudo openocd -f interface/cmsis-dap.cfg -f target/rp2040.cfg -c "adapter speed 5000" -c "program \$1 verify reset exit"
}

if [ -f ~/.bash_crypto_mount ]; then
   export CRYPTO_MOUNT="\${HOME}/encrypted"
   export CRYPTO_IMAGE="\${HOME}/.encrypted.img"
   . ~/.bash_crypto_mount
fi

if [ -d /proc/device-tree/chosen/bootloader ]; then
   uname -a
   grep Serial /proc/cpuinfo
   vcgencmd bootloader_version | grep version
   vcgencmd version | grep version
   vcgencmd measure_temp
   vcgencmd measure_volts
   vcgencmd get_config arm_freq
   vcgencmd get_mem arm
   vcgencmd get_mem gpu
fi
export PICO_SDK_PATH=\$HOME/pico-sdk
export PATH=\$HOME/.venv/bin:\$PATH
source ~/rpi-util/.bash_ssh_agent
source ~/rpi-util/.bash_kernel
if [ -f /boot/firmware/reboot ]; then
   count=\$(cat \${HOME}/reboot-count)
   count=\$((count + 1))
   echo -n \$count > "\${HOME}/reboot-count"
   echo "BOOT COUNT \$count"
   sleep 10
   sudo reboot "${1}"
else
   echo 0 > "\${HOME}/reboot-count"
   setup-ssh
fi
EOF

if [ ! -d $HOME/.venv ]; then
   python3 -m venv $HOME/.venv
fi

if ! grep -q ".bash_user_extras" "${HOME}/.bashrc"; then
cat <<EOF >> "${HOME}/.bashrc"
. \${HOME}/.bash_user_extras
EOF
fi
