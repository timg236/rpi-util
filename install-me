#!/bin/sh

script_dir=$(cd $(dirname $0) && pwd)

sudo apt update
sudo apt install -y tmux vim fonts-powerline
sudo apt install -y git bc bison flex libssl-dev make build-essential time pkg-config
sudo apt install -y openocd gcc-arm-none-eabi libnewlib-arm-none-eabi libstdc++-arm-none-eabi-newlib picocom cmake libusb-1.0-0-dev
sudo apt install -y xterm

cd $HOME

cp -f "${script_dir}/.vimrc" "${HOME}"
cp -f "${script_dir}/.tmux.conf" "${HOME}"
mkdir -p "${HOME}/.vim/colors"
cd "${HOME}/.vim/colors"
if [ ! -f molokai.vim ]; then
   wget https://raw.githubusercontent.com/tomasr/molokai/master/colors/molokai.vim
fi
cd "${HOME}"

if [ ! -e bcmstat ]; then
   git clone https://github.com/popcornmix/bcmstat
fi


if [ ! -e ~/.vim/bundle/Vundle.vim ]; then
   git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim
fi

if [ "$1" = "pico" ]; then
   cd $HOME
   if [ "$2" = "clean" ]; then
      rm -rf pico-sdk picoprobe pico-examples picotool pico-extras
   fi
   SDK_VERSION=2.2.0
   if [ ! -d pico-sdk ]; then
      git clone https://github.com/raspberrypi/pico-sdk
      cd pico-sdk
      git checkout ${SDK_VERSION}
      git submodule init
      git submodule update --recursive
      cd ..
   fi

   if [ ! -d picoprobe ]; then
      git clone https://github.com/raspberrypi/picoprobe.git
   fi

   if [ ! -d pico-examples ]; then
      git clone https://github.com/raspberrypi/pico-examples
      git checkout sdk-${SDK_VERSION}
   fi

   if [ ! -d pico-extras ]; then
      git clone git@github.com:raspberrypi/pico-extras.git
      git checkout sdk-${SDK_VERSION}
   fi

   if [ ! -d picotool ]; then
      git clone https://github.com/raspberrypi/picotool
      git checkout sdk-${SDK_VERSION}
      cd picotool
      sudo cp udev/99-picotool.rules /etc/udev/rules.d/
      mkdir build
      cd build
      cmake ..
      make
      sudo make install
   fi
   rm -f debugprobe.uf2
   wget https://github.com/raspberrypi/debugprobe/releases/download/debugprobe-v2.2.3/debugprobe.uf2
fi
